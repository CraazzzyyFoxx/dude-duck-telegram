[tool.poetry]
name = "dude-duck-teleram"
version = "0.1.0"
description = ""
authors = ["CraazzzyyFoxx <craazzzyyfoxx@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
uvicorn = "^0.24.0"
pydantic = {extras = ["email"], version = "^2.3.0"}
python-dotenv = "^1.0.0"
loguru = "^0.7.0"
sentry-sdk = {extras = ["fastapi"], version = "^1.31.0"}
fastapi = "^0.105.0"
uvloop = {version = "^0.19.0", platform="linux"}
pydantic-settings = "^2.0.2"
aiogram = "^3.0.0"
aiogram-dialog = "^2.0.0"
httpx = {extras = ["http2"], version = "^0.25.2"}
orjson = "^3.9.15"
babel = "^2.12.1"
pydantic-extra-types = "^2.0.0"
phonenumbers = "^8.13.21"
dateparser = "^1.1.8"
gunicorn = "^21.2.0"
asyncpg = "^0.29.0"
h2 = "^4.1.0"
sqlalchemy = "^2.0.23"
psycopg = {extras = ["binary"], version = "^3.1.18"}

[tool.poetry.group.dev.dependencies]
mypy = "^1.5.1"
ruff = "^0.0.287"
isort = "^5.12.0"
black = "^23.9.1"

[tool.black]
line-length = 120
target_version = ['py312']
include = '\.pyi?$'

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    # "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # complexity
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.12
target-version = "py312"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[mypy]
plugins = "pydantic.mypy"

follow_imports = "silent"
warn_redundant_casts = "True"
warn_unused_ignores = "True"
no_implicit_reexport = "True"

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = "True"

[pydantic-mypy]
init_forbid_extra = "True"
init_typed = "True"
warn_required_dynamic_aliases = "True"

[tool.isort]
skip_glob = "**/__init__.pyi"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
